type UserRegistryReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	NickName string `json:"nickName"`
	Email    string `json:"email"`
	Phone    string `json:"phone"`
}

type UserRegistryResp struct {
	Username string `json:"username"`
	NickName string `json:"nickName"`
	Email    string `json:"email"`
}

type UserLoginReq struct {
	Username  string `json:"username"`
	Password  string `json:"password"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type UserLoginResp struct {
	Username string `json:"username"`
	NickName string `json:"nickName"`
	token    string `json:"token"`
	JwtTokenResp
}

type CaptchaReq struct{}
type CaptchaResp struct {
	CaptchaId string `json:"captchaId"`
	PicPath   string `json:"picPath"`
}

type UserDeleteReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type UserDeleteResp struct {
	Info string `json:"info"`
}

type JwtTokenResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type GetUserInfoReq struct {
	Username string `json:"username"`
}

type GetUserInfoResp struct {
	NickName string `json:"nickName"`
	Email    string `json:"email"`
}

type UpdataSecertReq struct {
	Username    string `json:"username"`
	Password    string `json:"password"`
	NewPassword string `json:"newPassword"`
}
type UpdataSecertResp struct {
	Username string `json:"username"`
	JwtTokenResp
}

// 上传图书
type BookUploadReq struct {
	BookDetailResp
}
type BookUploadResp struct {
	BookId   uint   `json:"bookid"`
	Bookname string `json:"bookname"`
	Status   string `json:"status"`
	Code     string `json:"code"`
}

// 下载图书

type BookDetailReq struct {
	Bookname string `json:"bookname"`
	BookId   uint   `json:"bookid"`
}

type BookDetailResp struct {
	BookId      uint   `json:"bookid"`
	Bookname    string `json:"bookname"`
	Author      string `json:"author"`
	Uploader    string `json:"uploader"`
	Publisher   string `json:"publisher"`
	PublishDate string `json:"publishDate"`
	Version     string `json:"version"`
	Cover       string `json:"cover"`
	BookAllname string `json:"bookAllname"`
	StoreAddr   string `json:"storeAddr"`
}

type BookRoughResp struct {
	Bookname    string `json:"bookname"`
	Author      string `json:"author"`
	Version     string `json:"version"`
	Cover       string `json:"cover"`
	BookAllname string `json:"bookAllname"`
}

type BookCountReq struct {
	Count int `json:"count"`
}
type BookCountResp struct {
	BookDetailCount []*BookRoughResp `json:"BookRoughResp"`
}

type BookPagetReq struct {
	Page     int `json:"page"`
	PageSize int `json:"pageSize"`
}

type BookPagetResp struct {
	BookDetailCount []*BookRoughResp `json:"BookRoughResp"`
}

service EBook-api {
  @server(
    handler: UserRegistry
  )
  post /registry(UserRegistryReq) returns (UserRegistryResp);

  @server(
    handler: UserLogin
  )
  post /login(UserLoginReq) returns (UserLoginResp);

  @server(
    handler: UserCaptch
  )
  post /captcha(CaptchaReq) returns (CaptchaResp);

  @server(
    handler: UserDelete
  )
  post /delete(UserDeleteReq) returns (UserDeleteResp)
}


@server(
  jwt:JwtAuth
)
service EBook-api {
  @server(
  handler: GetUserInfo
  )
  post /user/info(GetUserInfoReq) returns (GetUserInfoResp)

  @server(
  handler: UpdataUserSecert
  )
  put /updatasecert(UpdataSecertReq) returns (UpdataSecertResp)

  @server(
  handler: UploadBook
  )
  post /upload/book(BookUploadReq) returns (BookUploadResp)

  @server(
  handler: DownloadBook
  )
  get /download/book(BookDetailReq) returns (BookDetailResp)

  @server(
  handler: GetBookByCount
  )
  get /book/count(BookCountReq) returns (BookCountResp)

  @server(
  handler: GetBookByPage
  )
  get /book/page(BookPagetReq) returns (BookPagetResp)
}