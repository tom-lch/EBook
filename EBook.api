type UserRegistryReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
	NickName string `json:"nickName"`
	Email    string `json:"email"`
	Phone    string `json:"phone"`
}

type UserRegistryResp struct {
	Username string `json:"username"`
	NickName string `json:"nickName"`
	Email    string `json:"email"`
}

type UserLoginReq struct {
	Username  string `json:"username"`
	Password  string `json:"password"`
	Captcha   string `json:"captcha"`
	CaptchaId string `json:"captchaId"`
}

type UserLoginResp struct {
	Username string `json:"username"`
	NickName string `json:"nickName"`
	token    string `json:"token"`
	JwtTokenResp
}

type CaptchaReq struct{}
type CaptchaResp struct {
	CaptchaId string `json:"captchaId"`
	PicPath   string `json:"picPath"`
}

type UserDeleteReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type UserDeleteResp struct {
	Info string `json:"info"`
}

type JwtTokenResp struct {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type GetUserInfoReq struct {
	Username string `json:"username"`
}

type GetUserInfoResp struct {
	NickName string `json:"nickName"`
	Email    string `json:"email"`
}

type UpdataSecertReq struct {
	Username    string `json:"username"`
	Password    string `json:"password"`
	NewPassword string `json:"newPassword"`
}
type UpdataSecertResp struct {
	Username string `json:"username"`
	JwtTokenResp
}

service EBook-api {
  @server(
    handler: UserRegistry
  )
  post /registry(UserRegistryReq) returns (UserRegistryResp);

  @server(
    handler: UserLogin
  )
  post /login(UserLoginReq) returns (UserLoginResp);

  @server(
    handler: UserCaptch
  )
  post /captcha(CaptchaReq) returns (CaptchaResp);

  @server(
    handler: UserDelete
  )
  post /delete(UserDeleteReq) returns (UserDeleteResp)
}


@server(
  jwt:JwtAuth
)
service EBook-api {
  @server(
  handler: GetUserInfo
  )
  post /user/info(GetUserInfoReq) returns (GetUserInfoResp)

  @server(
  handler: UpdataUserSecert
  )
  put /updatasecert(UpdataSecertReq) returns (UpdataSecertResp)
}